# mise configuration for submod development environment
# https://mise.jdx.dev/

[tools]
# Rust toolchain - minimum version 1.75 for const generic improvements
rust = "1.75"
# Python for bindings development and testing
python = "3.11"

[env]
# Rust compilation settings
RUST_BACKTRACE = "1"
# Enable colored output
CARGO_TERM_COLOR = "always"
# Python bindings directory
BINDINGS_DIR = "submod-bindings-py"

[tasks.build]
description = "Build all workspace crates"
run = "cargo build --workspace"

[tasks.test]
description = "Run all tests in workspace"
run = "cargo test --workspace"

[tasks.check]
description = "Fast check without building"
run = "cargo check --workspace"

[tasks.lint]
description = "Run clippy lints"
run = "cargo clippy --workspace -- -D warnings"

[tasks.fmt]
description = "Format code with rustfmt"
run = "cargo fmt --all"

[tasks.fmt-check]
description = "Check code formatting"
run = "cargo fmt --all -- --check"

[tasks.doc]
description = "Build documentation"
run = "cargo doc --workspace --no-deps"

[tasks.clean]
description = "Clean build artifacts"
run = "cargo clean"

[tasks.py-build]
description = "Build Python bindings with maturin"
run = """
if ! command -v maturin &> /dev/null; then
    echo "Error: maturin is not installed. Please install it with:"
    echo "  pip install maturin"
    exit 1
fi
cd ${BINDINGS_DIR} && maturin develop
"""

[tasks.py-test]
description = "Test Python bindings"
run = """
if ! command -v pytest &> /dev/null; then
    echo "Error: pytest is not installed. Please install it with:"
    echo "  pip install pytest"
    exit 1
fi
cd ${BINDINGS_DIR} && python -m pytest tests/
"""

[tasks.service-run]
description = "Run the gRPC/REST service"
run = "cargo run --bin submod-service"

[tasks.ci]
description = "Run all CI checks"
run = [
    "cargo fmt --all -- --check",
    "cargo clippy --workspace -- -D warnings",
    "cargo test --workspace",
    "cargo build --workspace --release"
]
