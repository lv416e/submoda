# Submoda Development Environment
# Managed by mise (https://mise.jdx.dev)

[settings]
# Use cargo-binstall for faster installations
cargo_binstall = true

[tools]
# Rust pinned for reproducibility
rust = "1.90.0"

# Python for PyO3 bindings and data generation scripts
# Using venv for dependency isolation
python = { version = "3.12.12", venv = ".venv" }

# Cargo tools managed by mise, installed with binstall
# Pinned for reproducibility
"cargo:cargo-edit" = "0.13.7"
"cargo:cargo-watch" = "8.5.3"
"cargo:cargo-nextest" = "0.9.105"

[tasks.test]
description = "Run tests"
run = "cargo nextest run --workspace"

[tasks.bench]
description = "Run benchmarks"
run = "cargo bench --workspace"

[tasks.watch]
description = "Watch and rebuild on changes"
run = "cargo watch -c -x 'check --workspace --all-targets' -x 'nextest run --workspace'"

[tasks.fmt]
description = "Format code"
run = "cargo fmt --all"

[tasks.lint]
description = "Run clippy linter"
run = "cargo clippy --workspace --all-targets --no-deps -- -D warnings -W clippy::pedantic"
depends = ["fmt"]

[tasks.check]
description = "Check the project for errors"
run = "cargo check --workspace --all-targets"

[tasks.pip-install]
description = "Install Python development dependencies"
run = "python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt"
sources = ["requirements-dev.txt"]

[tasks.pip-compile]
description = "Compile requirements-dev.in to requirements-dev.txt with pip-tools"
run = "python -m pip install pip-tools && python -m piptools compile --generate-hashes requirements-dev.in -o requirements-dev.txt"
sources = ["requirements-dev.in"]
outputs = ["requirements-dev.txt"]

[tasks.setup]
description = "Setup development environment by installing tools and Python dependencies"
run = "mise install && mise run pip-install"

[env]
# Set default Rust flags for development
RUST_BACKTRACE = "1"
RUST_LOG = "info"
